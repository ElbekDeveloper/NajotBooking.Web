@page "/seats";
@using System.Net.Http;
@inject HttpClient httpClient;

<PageTitle>Seats</PageTitle>

<div>
    <div class="d-flex justify-content-between">
        <h3>Seats</h3>
        <NavLink href="/seats/add-seat" class="btn btn-success"><i class="bi bi-plus-circle"></i> &nbsp; Add new seat</NavLink>
    </div>
    <div class="mt-3">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Number</th>
                    <th scope="col">Branch</th>
                    <th scope="col">Floor</th>
                    <th scope="col">Price</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var seat in RetrieveAllSeats)
                {
                    <tr>
                        <th scope="row">@(order++)</th>
                        <td>@seat.Number</td>
                        <td>@seat.Branch</td>
                        <td>@seat.Floor</td>
                        <td>@(string.Format("{0:c}", seat.Price))</td>
                        <td class="d-flex justify-content-end">
                            <NavLink href=@($"/seats/edit-seat/{@seat.Id}") class="btn btn-success">Edit</NavLink> &nbsp;
                            <NavLink href=@($"/seats/delete-seat/{@seat.Id}") class="btn btn-danger">Delete</NavLink>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>

@code {
    public int order = 1;
    public IEnumerable<Seat> RetrieveAllSeats = new List<Seat>();

    protected override async Task OnInitializedAsync()
    {
        var response = 
            await httpClient.GetAsync("https://najot-booking.azurewebsites.net/api/Seats");

        RetrieveAllSeats = 
            await response.Content.ReadFromJsonAsync<IEnumerable<Seat>>();
    }
}